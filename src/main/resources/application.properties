
server.port=8081
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/attendance?characterEncoding=utf-8&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=shenbao
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.initialSize =5
spring.datasource.minIdle =0
spring.datasource.maxActive =10
spring.datasource.maxWait = 60000
spring.datasource.timeBetweenEvictionRunsMillis = 60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery = SELECT 'x'
spring.datasource.testWhileIdle = true
spring.datasource.testOnBorrow = false
spring.datasource.testOnReturn = false
spring.datasource.poolPreparedStatements = true
spring.datasource.maxPoolPreparedStatementPerConnectionSize = 20
spring.datasource.stat.mergeSql = true
spring.datasource.stat.slowSqlMillis = 3000
spring.datasource.stat.logSlowSql = true
spring.datasource.removeAbandoned = false
spring.datasource.removeAbandonedTimeout = 180
spring.datasource.logAbandoned = true

#mybatis
mybatis.mapper.path=classpath:mapper/*.xml
#mybatis.interface.path=com.shenbaoyong.attendance.dao


# REDIS (RedisProperties)
spring.redis.database=0
# server host
spring.redis.host=47.92.39.76

# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=-1
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=3000
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=3000
spring.redis.password=

spring.redis.port=6379


# default-store in spring session. it will be set in redis only outside.
spring.session.store-type=NONE

#拦截器
spring.intercepter.enable=true


#kafka
spring.kafka.bootstrap-servers=47.92.39.76:9092
spring.kafka.consumer.group-id=myGroup
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


#thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#关闭缓存
spring.thymeleaf.cache=false

